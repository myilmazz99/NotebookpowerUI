{"version":3,"sources":["Components/Tools/numberFormat.js","Redux/Actions/productActions.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Redux/Actions/orderActions.js","Components/Tools/displayOrderStatus.js","Components/Utilities/CategorySelectBox.js","Components/Utilities/useSpecRows.js","Components/Utilities/ValidationRules/ProductValidation.js","Components/Admin/AddProduct.js","Components/Admin/UpdateProduct.js","Components/Admin/Products.js","Components/Admin/Orders.js","Components/Admin/OrderDetails.js","Components/Admin/EmailList.js","Components/Admin/Feedbacks.js","Pages/Admin.js"],"names":["numberFormat","number","Intl","NumberFormat","undefined","style","currency","format","addProduct","product","dispatch","a","formData","FormData","productImages","i","append","webAPI","post","response","parseInt","data","type","actionTypes","payload","id","dispatchActionResult","errorMessages","JSON","parse","ErrorMessage","updateProduct","length","put","ErrorType","toLowerCase","includes","deleteProduct","delete","getProducts","get","console","log","getBestSeller","getDailyDeals","getSimiliar","categoryId","getProduct","getSpecifications","removeSpecification","productId","specId","addComment","userId","username","comment","rating","commentText","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","F","s","n","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","fulfillOrder","order","cartId","history","push","getOrders","getOrderById","confirmOrder","orderId","displayOrderStatus","code","connect","state","categories","categoryReducer","getCategories","bindActionCreators","handleChange","useEffect","name","className","onChange","map","key","categoryName","useSpecRows","removeSpec","useState","specRowCount","setSpecRowCount","displaySpecRow","setDisplaySpecRow","specifications","setSpecifications","specArr","fill","defaultValue","placeholder","prev","specificationName","specificationValue","onClick","preventDefault","getSpecId","getRowValues","specNames","document","querySelectorAll","specValues","find","ProductValidation","values","errors","productName","productDescription","newPrice","oldPrice","stock","validationErrors","productReducer","useHistory","useForm","handleSubmit","handleUpload","updateErrors","newErr","forEach","propName","lowerCaseFirstChar","PropertyName","onSubmit","convertToNumber","string","isFloat","isNaN","parseFloat","retrieveMissingInputValuesAndSubmit","encType","rows","multiple","products","updateValues","useParams","Number","to","slice","icon","deletePr","colSpan","orders","orderReducer","filter","status","fullName","totalPrice","shortDate","getOrder","setOrder","addressDescription","orderItems","productQuantity","productPrice","emails","adminReducer","getEmails","j","email","feedbacks","getFeedbacks","feedbackText","role","userReducer","userCredentials","exact","path","component","Products","AddProduct","UpdateProduct","Orders","OrderDetails","EmailList","Feedbacks"],"mappings":"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","file":"static/js/8.68c2cf5a.chunk.js","sourcesContent":["const numberFormat = (number) =>\r\n  new Intl.NumberFormat(undefined, {\r\n    style: \"currency\",\r\n    currency: \"TRY\",\r\n  }).format(number);\r\n\r\nexport default numberFormat;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport dispatchActionResult from \"./dispatchActionResult\";\r\nimport webAPI from \"../../Axios/webAPI\";\r\n\r\nexport const addProduct = (product) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      let formData = new FormData();\r\n      if (product.productImages)\r\n        for (const i of product.productImages) {\r\n          formData.append(\"productImages\", i);\r\n        }\r\n\r\n      delete product.productImages;\r\n\r\n      let response = await webAPI.post(\"api/products/add\", product);\r\n\r\n      formData.append(\"productId\", parseInt(response.data));\r\n\r\n      await webAPI.post(\"api/products/addImages\", formData);\r\n\r\n      dispatch({\r\n        type: actionTypes.ADD_PRODUCT_SUCCESS,\r\n        payload: { ...product, id: response.data },\r\n      });\r\n      dispatchActionResult(dispatch, true, \"Ürün başarıyla eklendi.\");\r\n    } catch (err) {\r\n      let errorMessages = JSON.parse(err.response.data.ErrorMessage);\r\n      dispatch({\r\n        type: actionTypes.SET_PRODUCT_VALIDATION_ERROR,\r\n        payload: errorMessages,\r\n      });\r\n\r\n      dispatchActionResult(\r\n        dispatch,\r\n        false,\r\n        \"Ürün eklenemedi. Lütfen daha sonra tekrar deneyin veya yazılım ekibimizle irtibata geçin.\"\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch) => {\r\n  try {\r\n    let formData = new FormData();\r\n\r\n    if (product.productImages.length > 0) {\r\n      for (const i of product.productImages) {\r\n        formData.append(\"productImages\", i);\r\n      }\r\n\r\n      delete product.productImages;\r\n    }\r\n\r\n    await webAPI.put(\"api/products\", product);\r\n\r\n    formData.append(\"productId\", parseInt(product.id));\r\n\r\n    await webAPI.post(\"api/products/addImages\", formData);\r\n\r\n    dispatch({ type: actionTypes.UPDATE_PRODUCT_SUCCESS, payload: product });\r\n    dispatchActionResult(dispatch, true, \"Ürün başarıyla güncellendi.\");\r\n  } catch (err) {\r\n    if (err.response.data.ErrorType.toLowerCase().includes(\"validation\")) {\r\n      let errorMessages = JSON.parse(err.response.data.ErrorMessage);\r\n      dispatch({\r\n        type: actionTypes.SET_PRODUCT_VALIDATION_ERROR,\r\n        payload: errorMessages,\r\n      });\r\n    } else {\r\n      dispatchActionResult(\r\n        dispatch,\r\n        false,\r\n        \"Ürün güncellenemedi. Lütfen daha sonra tekrar deneyin veya yazılım ekibimizle irtibata geçin.\"\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n  try {\r\n    await webAPI.delete(`api/products/${id}`);\r\n    dispatch({ type: actionTypes.DELETE_PRODUCT_SUCCESS, payload: id });\r\n    dispatchActionResult(dispatch, true, \"Ürün başarıyla silindi.\");\r\n  } catch (error) {\r\n    dispatchActionResult(\r\n      dispatch,\r\n      false,\r\n      \"Ürün silinemedi. Lütfen daha sonra tekrar deneyin veya yazılım ekibimizle irtibata geçin.\"\r\n    );\r\n  }\r\n};\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n  try {\r\n    let response = await webAPI.get(\"api/products\");\r\n    dispatch({\r\n      type: actionTypes.GET_ALL_PRODUCTS_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getBestSeller = () => async (dispatch) => {\r\n  try {\r\n    let response = await webAPI.get(\"api/products/bestseller\");\r\n    dispatch({\r\n      type: actionTypes.GET_BEST_SELLER_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getDailyDeals = () => async (dispatch) => {\r\n  try {\r\n    let response = await webAPI.get(\"api/products/dailydeals\");\r\n    dispatch({\r\n      type: actionTypes.GET_DAILY_DEALS_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getSimiliar = (categoryId) => async (dispatch) => {\r\n  try {\r\n    let response = await webAPI.get(`api/products/similiar/${categoryId}`);\r\n    dispatch({\r\n      type: actionTypes.GET_SIMILIAR_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getProduct = (id) => async (dispatch) => {\r\n  try {\r\n    let response = await webAPI.get(`api/products/${id}`);\r\n    dispatch({ type: actionTypes.GET_PRODUCT_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getSpecifications = () => async (dispatch) => {\r\n  try {\r\n    let response = await webAPI.get(`api/products/specifications`);\r\n    dispatch({\r\n      type: actionTypes.GET_SPECIFICATIONS_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const removeSpecification = (productId, specId) => async (dispatch) => {\r\n  try {\r\n    await webAPI.delete(`api/products/${productId}/${specId}`);\r\n    dispatch({\r\n      type: actionTypes.REMOVE_SPECIFICATION_SUCCESS,\r\n      payload: specId,\r\n    });\r\n    dispatchActionResult(dispatch, true, \"Özellik başarıyla silindi.\");\r\n  } catch (error) {\r\n    dispatchActionResult(\r\n      dispatch,\r\n      false,\r\n      \"Özellik silinemedi. Lütfen daha sonra tekrar deneyin veya yazılım ekibimizle irtibata geçin.\"\r\n    );\r\n  }\r\n};\r\n\r\nexport const addComment = (productId, userId, username, comment) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await webAPI.post(\"api/comments/add\", {\r\n      productId,\r\n      userId,\r\n      rating: comment.rating,\r\n      commentText: comment.commentText,\r\n      username,\r\n    });\r\n    dispatch({\r\n      type: actionTypes.ADD_COMMENT_SUCCESS,\r\n      payload: {\r\n        productId,\r\n        userId,\r\n        rating: comment.rating,\r\n        commentText: comment.commentText,\r\n        username,\r\n      },\r\n    });\r\n    dispatchActionResult(dispatch, true, \"Yorumunuz başarıyla eklendi.\");\r\n  } catch (error) {\r\n    dispatchActionResult(\r\n      dispatch,\r\n      true,\r\n      \"Yorumunuz eklenemedi. Lütfen daha sonra tekrar deneyiniz.\"\r\n    );\r\n  }\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import * as actionTypes from \"../Actions/actionTypes\";\r\n\r\nimport webAPI from \"../../Axios/webAPI\";\r\nimport dispatchActionResult from \"./dispatchActionResult\";\r\n\r\nexport const fulfillOrder = (order, cartId, history) => async (dispatch) => {\r\n  try {\r\n    await webAPI.post(\"api/orders\", order);\r\n    dispatch({ type: actionTypes.COMPLETE_ORDER_SUCCESS, payload: order });\r\n    await webAPI.put(`api/carts/${cartId}`);\r\n    dispatch({ type: actionTypes.CLEAR_CART });\r\n    history.push(\"/user/orders\");\r\n    dispatchActionResult(\r\n      dispatch,\r\n      true,\r\n      \"Ödemeniz alındı. En kısa sürede siparişinizi onaylayacağız İyi alışverişler.\"\r\n    );\r\n  } catch (error) {\r\n    if (error.response.data.ErrorType.toLowerCase().includes(\"payment\")) {\r\n      dispatch({\r\n        type: actionTypes.SET_PAYMENT_ERROR,\r\n        payload: error.response.data.ErrorMessage,\r\n      });\r\n    } else if (\r\n      error.response.data.ErrorType.toLowerCase().includes(\"validation\")\r\n    ) {\r\n      let errorMessages = JSON.parse(error.data.response.ErrorMessage);\r\n      dispatch({\r\n        type: actionTypes.SET_ORDER_ERROR,\r\n        payload: errorMessages,\r\n      });\r\n    } else {\r\n      dispatchActionResult(\r\n        dispatch,\r\n        false,\r\n        \"Ödeme gerçekleştirilemedi. Lütfen daha sonra tekrar deneyiniz.\"\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport const getOrders = () => async (dispatch) => {\r\n  try {\r\n    let response = await webAPI.get(\"api/orders\");\r\n    dispatch({ type: actionTypes.GET_ORDERS_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    dispatchActionResult(\r\n      dispatch,\r\n      false,\r\n      \"Siparişler getirilemedi. Lütfen daha sonra tekrar deneyiniz veya yazılım ekibimize durumu bildiriniz.\"\r\n    );\r\n  }\r\n};\r\n\r\nexport const getOrderById = (id) => async (dispatch) => {\r\n  try {\r\n    let response = await webAPI.get(`api/orders/${id}`);\r\n    dispatch({ type: actionTypes.GET_ORDER_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    dispatchActionResult(\r\n      dispatch,\r\n      false,\r\n      \"Sipariş bulunamadı. Lütfen daha sonra tekrar deneyiniz veya yazılım ekibimize durumu bildiriniz.\"\r\n    );\r\n  }\r\n};\r\n\r\nexport const confirmOrder = (orderId) => async (dispatch) => {\r\n  try {\r\n    let response = await webAPI.put(`api/orders/${orderId}`);\r\n    dispatch({\r\n      type: actionTypes.CONFIRM_ORDER_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    dispatchActionResult(\r\n      dispatch,\r\n      false,\r\n      \"Sipariş onaylanamadı. Lütfen daha sonra tekrar deneyiniz veya yazılım ekibimize durumu bildiriniz.\"\r\n    );\r\n  }\r\n};\r\n","const displayOrderStatus = (code) => {\r\n  switch (code) {\r\n    case 0:\r\n      return \"Tamamlandı\";\r\n    case 1:\r\n      return \"Kargoda\";\r\n    case 2:\r\n      return \"Onay Bekliyor\";\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default displayOrderStatus;\r\n","import React, { useEffect } from \"react\";\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getCategories } from \"../../Redux/Actions/categoryActions\";\r\n\r\nconst CategorySelectBox = ({\r\n  getCategories,\r\n  categories,\r\n  handleChange,\r\n  categoryId,\r\n}) => {\r\n  useEffect(() => {\r\n    if (categories.length === 0) getCategories();\r\n  }, []);\r\n\r\n  return (\r\n    <select\r\n      name=\"categoryId\"\r\n      className=\"custom-select\"\r\n      onChange={handleChange}\r\n      value={categoryId || \"Kategori Seç...\"}\r\n    >\r\n      {categories &&\r\n        categories.map((i) => (\r\n          <option key={i.id} value={i.id}>\r\n            {i.categoryName}\r\n          </option>\r\n        ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  categories: state.categoryReducer.categories,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCategories: bindActionCreators(getCategories, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategorySelectBox);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst useSpecRows = (removeSpec, productId) => {\r\n  const [specRowCount, setSpecRowCount] = useState(1);\r\n  const [displaySpecRow, setDisplaySpecRow] = useState([]);\r\n  const [specifications, setSpecifications] = useState([]);\r\n  const [specArr] = useState([]);\r\n\r\n  function getSpecId(e, specId) {\r\n    e.preventDefault();\r\n    removeSpec(specId);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (specifications.length === 0)\r\n      setDisplaySpecRow(\r\n        Array(specRowCount).fill(\r\n          <>\r\n            <div className=\"col-6 mt-3\">\r\n              <input\r\n                defaultValue=\"\"\r\n                type=\"text\"\r\n                name=\"specificationName[]\"\r\n                placeholder=\"Donanım Adı, ö. GPU\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"col-6 mt-3\">\r\n              <input\r\n                defaultValue=\"\"\r\n                type=\"text\"\r\n                name=\"specificationValue[]\"\r\n                placeholder=\"Donanım, ö. GTX 1050\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n          </>\r\n        )\r\n      );\r\n\r\n    if (specifications.length > 0)\r\n      setDisplaySpecRow((prev) => [\r\n        ...prev,\r\n        ...Array(1).fill(\r\n          <>\r\n            <div className=\"col-6 mt-3\">\r\n              <input\r\n                defaultValue=\"\"\r\n                type=\"text\"\r\n                name=\"specificationName[]\"\r\n                placeholder=\"Donanım Adı, ö. GPU\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"col-6 mt-3\">\r\n              <input\r\n                defaultValue=\"\"\r\n                type=\"text\"\r\n                name=\"specificationValue[]\"\r\n                placeholder=\"Donanım, ö. GTX 1050\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n          </>\r\n        ),\r\n      ]);\r\n  }, [specRowCount]);\r\n\r\n  useEffect(() => {\r\n    if (specifications.length > 0)\r\n      setDisplaySpecRow(\r\n        specifications.map((i) => (\r\n          <>\r\n            <div className=\"col-6 mt-3\">\r\n              <input\r\n                defaultValue={i.specificationName}\r\n                type=\"text\"\r\n                name=\"specificationName[]\"\r\n                placeholder=\"Donanım Adı, ö. GPU\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"col-5 mt-3\">\r\n              <input\r\n                defaultValue={i.specificationValue}\r\n                type=\"text\"\r\n                name=\"specificationValue[]\"\r\n                placeholder=\"Donanım, ö. GTX 1050\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"col-1 mt-3 text-center\">\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={(e) => getSpecId(e, i.id)}\r\n              >\r\n                Sil\r\n              </button>\r\n            </div>\r\n          </>\r\n        ))\r\n      );\r\n  }, [specifications]);\r\n\r\n  const getRowValues = (specifications = []) => {\r\n    let specNames = document.querySelectorAll(\r\n      'input[name=\"specificationName[]\"]'\r\n    );\r\n    let specValues = document.querySelectorAll(\r\n      'input[name=\"specificationValue[]\"]'\r\n    );\r\n\r\n    for (let i = 0; i < specNames.length; i++) {\r\n      var found = specifications.find(\r\n        (s) =>\r\n          s.specificationName === specNames[i].value &&\r\n          s.specificationValue === specValues[i].value\r\n      );\r\n      if (!found && specValues[i].value !== \"\" && specNames[i].value !== \"\") {\r\n        specArr.push({\r\n          specificationName: specNames[i].value,\r\n          specificationValue: specValues[i].value,\r\n        });\r\n      }\r\n    }\r\n\r\n    return specArr;\r\n  };\r\n\r\n  const getSpecifications = (specifications) => {\r\n    setSpecifications(specifications);\r\n  };\r\n\r\n  return {\r\n    displaySpecRow,\r\n    setSpecRowCount,\r\n    getRowValues,\r\n    getSpecifications,\r\n  };\r\n};\r\n\r\nexport default useSpecRows;\r\n","const ProductValidation = (values) => {\r\n  let errors = {};\r\n\r\n  if (!values.productName) {\r\n    errors.productName = \"Ürün ismi girmek zorunludur.\";\r\n  } else if (values.productName && values.productName.length > 100) {\r\n    errors.productName = \"Ürün ismi en fazla 100 karakter içerebilir.\";\r\n  }\r\n\r\n  if (!values.productDescription) {\r\n    errors.productDescription = \"Ürün açıklaması girmek zorunludur.\";\r\n  } else if (\r\n    values.productDescription &&\r\n    values.productDescription.length < 10\r\n  ) {\r\n    errors.productDescription = \"Ürün açıklaması en az 10 karakter içerebilir.\";\r\n  }\r\n\r\n  if (!values.newPrice) {\r\n    errors.newPrice = \"Fiyat alanını doldurmak zorunludur.\";\r\n  } else if (values.newPrice && values.newPrice < 1) {\r\n    errors.newPrice = \"Fiyat alanı negatif veya sıfır olamaz.\";\r\n  } else if (values.newPrice > values.oldPrice) {\r\n    errors.oldPrice = \"Fiyat alanı, indirimli fiyat alanından küçük olamaz.\";\r\n  }\r\n\r\n  if (!values.stock) {\r\n    errors.stock = \"Stok alanını doldurmak zorunludur.\";\r\n  } else if (values.stock && values.stock < 1) {\r\n    errors.stock = \"Stok alanı negatif veya sıfır olamaz.\";\r\n  }\r\n\r\n  if (!values.categoryId) {\r\n    errors.categoryId = \"Kategori seçmek zorunludur.\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default ProductValidation;\r\n","import React, { useEffect } from \"react\";\r\nimport useForm from \"../Utilities/useForm\";\r\nimport CategorySelectBox from \"../Utilities/CategorySelectBox\";\r\n//REDUX\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { addProduct } from \"../../Redux/Actions/productActions\";\r\nimport useSpecRows from \"../Utilities/useSpecRows\";\r\n//Validation\r\nimport ProductValidation from \"../Utilities/ValidationRules/ProductValidation\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport lowerCaseFirstChar from \"../Tools/lowerCaseFirstChar\";\r\n\r\nconst AddProduct = ({ addProduct, validationErrors }) => {\r\n  const history = useHistory();\r\n  let {\r\n    handleSubmit,\r\n    handleChange,\r\n    values,\r\n    handleUpload,\r\n    errors,\r\n    updateErrors,\r\n  } = useForm(add, ProductValidation);\r\n  let { setSpecRowCount, displaySpecRow, getRowValues } = useSpecRows();\r\n\r\n  const retrieveMissingInputValuesAndSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    values.specifications = [...getRowValues(values.specifications)];\r\n\r\n    const convertToNumber = (string, isFloat) => {\r\n      if (isNaN(string)) return;\r\n      return isFloat ? parseFloat(string) : parseInt(string);\r\n    };\r\n\r\n    values.stock = convertToNumber(values.stock);\r\n    values.oldPrice = convertToNumber(values.oldPrice, true);\r\n    values.newPrice = convertToNumber(values.newPrice, true);\r\n    values.categoryId = convertToNumber(values.categoryId);\r\n\r\n    handleSubmit();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (validationErrors.length > 0) {\r\n      let newErr = {};\r\n      validationErrors.forEach((i) => {\r\n        let propName = lowerCaseFirstChar(i.PropertyName);\r\n        newErr[propName] = i.ErrorMessage;\r\n      });\r\n      updateErrors(newErr);\r\n    }\r\n  }, [validationErrors]);\r\n\r\n  function add() {\r\n    addProduct(values);\r\n    //history.goBack();\r\n  }\r\n\r\n  return (\r\n    <div id=\"admin-add-product\">\r\n      <h1>Ürün Ekle</h1>\r\n      <form\r\n        onSubmit={(e) => retrieveMissingInputValuesAndSubmit(e)}\r\n        encType=\"multipart/form-data\"\r\n      >\r\n        <div className=\"form-group mb-4\">\r\n          <label>Ürün Adı</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"productName\"\r\n            placeholder=\"Ürün Adı\"\r\n            onChange={handleChange}\r\n            value={values.productName || \"\"}\r\n            className={`form-control ${errors.productName && \"border-danger\"}`}\r\n          />\r\n          {errors.productName && (\r\n            <div className=\"text-danger small\">{errors.productName}</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-row d-flex justify-between my-4\">\r\n          <div className=\"col-4\">\r\n            <label>Fiyat</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"oldPrice\"\r\n              step=\"0.01\"\r\n              onChange={handleChange}\r\n              value={values.oldPrice || \"\"}\r\n              className={`form-control ${errors.oldPrice && \"border-danger\"}`}\r\n            />\r\n            {errors.oldPrice && (\r\n              <div className=\"text-danger small\">{errors.oldPrice}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label>İndirimli Fiyat</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"newPrice\"\r\n              step=\"0.01\"\r\n              onChange={handleChange}\r\n              value={values.newPrice || \"\"}\r\n              className={`form-control ${errors.newPrice && \"border-danger\"}`}\r\n            />\r\n            {errors.newPrice && (\r\n              <div className=\"text-danger small\">{errors.newPrice}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label>Stok Adedi</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"stock\"\r\n              onChange={handleChange}\r\n              value={values.stock || \"\"}\r\n              className={`form-control ${errors.stock && \"border-danger\"}`}\r\n            />\r\n            {errors.stock && (\r\n              <div className=\"text-danger small\">{errors.stock}</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group my-4\">\r\n          <label>Ürün Bilgileri</label>\r\n          <textarea\r\n            value={values.productDescription || \"\"}\r\n            onChange={handleChange}\r\n            name=\"productDescription\"\r\n            rows=\"5\"\r\n            placeholder=\"Ürün Bilgileri\"\r\n            className={`form-control ${\r\n              errors.productDescription && \"border-danger\"\r\n            }`}\r\n          ></textarea>\r\n          {errors.productDescription && (\r\n            <div className=\"text-danger small\">{errors.productDescription}</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"my-4\">\r\n          <label>Kategori</label>\r\n          <CategorySelectBox\r\n            handleChange={handleChange}\r\n            categoryId={values.categoryId}\r\n          />\r\n          {errors.categoryId && (\r\n            <div className=\"text-danger small\">{errors.categoryId}</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-group my-4\">\r\n          <label>Ürün Resimleri</label>\r\n          <input\r\n            name=\"productImages\"\r\n            type=\"file\"\r\n            multiple\r\n            onChange={handleUpload}\r\n            className=\"border\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group my-4\">\r\n          <label>Donanım</label>\r\n          <button\r\n            className=\"btn btn-primary btn-sm ml-3 mb-1\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setSpecRowCount((prev) => (prev += 1));\r\n            }}\r\n          >\r\n            Satır Ekle\r\n          </button>\r\n          <div className=\"form-row mt-2\">{displaySpecRow.map((i) => i)}</div>\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary w-100\">Kaydet</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addProduct: bindActionCreators(addProduct, dispatch),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  validationErrors: state.productReducer.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProduct);\r\n","import React, { useEffect } from \"react\";\r\nimport CategorySelectBox from \"../Utilities/CategorySelectBox\";\r\nimport useForm from \"../Utilities/useForm\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useSpecRows from \"../Utilities/useSpecRows\";\r\n//Validation\r\nimport ProductValidation from \"../Utilities/ValidationRules/ProductValidation\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getProduct,\r\n  updateProduct,\r\n  removeSpecification,\r\n} from \"../../Redux/Actions/productActions\";\r\nimport lowerCaseFirstChar from \"../Tools/lowerCaseFirstChar\";\r\n\r\nconst UpdateProduct = ({\r\n  products,\r\n  getProduct,\r\n  updateProduct,\r\n  removeSpecification,\r\n  validationErrors,\r\n}) => {\r\n  let {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    handleUpload,\r\n    errors,\r\n    updateValues,\r\n    updateErrors,\r\n  } = useForm(update, ProductValidation);\r\n  let {\r\n    setSpecRowCount,\r\n    displaySpecRow,\r\n    getRowValues,\r\n    getSpecifications,\r\n  } = useSpecRows(removeSpec);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (products) {\r\n      let product = products.find((i) => i.id === Number(id));\r\n      if (!product) {\r\n        getProduct(Number(id));\r\n      } else {\r\n        updateValues(product);\r\n        getSpecifications(product.specifications);\r\n      }\r\n    }\r\n  }, [products]);\r\n\r\n  useEffect(() => {\r\n    if (validationErrors.length > 0) {\r\n      let newErr = {};\r\n      validationErrors.forEach((i) => {\r\n        let propName = lowerCaseFirstChar(i.PropertyName);\r\n        newErr[propName] = i.ErrorMessage;\r\n      });\r\n      updateErrors(newErr);\r\n    }\r\n  }, [validationErrors]);\r\n\r\n  const retrieveMissingInputValuesAndSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    values.specifications = [\r\n      ...values.specifications,\r\n      ...getRowValues(values.specifications),\r\n    ];\r\n\r\n    const convertToNumber = (string, isFloat) => {\r\n      if (isNaN(string)) return;\r\n      return isFloat ? parseFloat(string) : parseInt(string);\r\n    };\r\n\r\n    values.stock = convertToNumber(values.stock);\r\n    values.oldPrice = convertToNumber(values.oldPrice, true);\r\n    values.newPrice = convertToNumber(values.newPrice, true);\r\n    values.categoryId = convertToNumber(values.categoryId);\r\n\r\n    handleSubmit();\r\n  };\r\n\r\n  function removeSpec(specId) {\r\n    removeSpecification(id, specId);\r\n  }\r\n\r\n  function update() {\r\n    updateProduct(values);\r\n    //history.goBack();\r\n  }\r\n\r\n  return (\r\n    <div id=\"admin-update-product\">\r\n      <h2 className=\"mb-3\">Ürün Güncelle</h2>\r\n      <form\r\n        onSubmit={(e) => retrieveMissingInputValuesAndSubmit(e)}\r\n        encType=\"multipart/form-data\"\r\n      >\r\n        <div className=\"form-group mb-4\">\r\n          <label>Ürün Adı</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"productName\"\r\n            placeholder=\"Ürün Adı\"\r\n            onChange={handleChange}\r\n            value={values.productName || \"\"}\r\n            className={`form-control ${errors.productName && \"border-danger\"}`}\r\n          />\r\n          {errors.productName && (\r\n            <div className=\"text-danger small\">{errors.productName}</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-row d-flex justify-between my-4\">\r\n          <div className=\"col-4\">\r\n            <label>Fiyat</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"oldPrice\"\r\n              step=\"0.01\"\r\n              onChange={handleChange}\r\n              value={values.oldPrice || \"\"}\r\n              className={`form-control ${errors.oldPrice && \"border-danger\"}`}\r\n            />\r\n            {errors.oldPrice && (\r\n              <div className=\"text-danger small\">{errors.oldPrice}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label>İndirimli Fiyat</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"newPrice\"\r\n              step=\"0.01\"\r\n              onChange={handleChange}\r\n              value={values.newPrice || \"\"}\r\n              className={`form-control ${errors.newPrice && \"border-danger\"}`}\r\n            />\r\n            {errors.newPrice && (\r\n              <div className=\"text-danger small\">{errors.newPrice}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label>Stok Adedi</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"stock\"\r\n              onChange={handleChange}\r\n              value={values.stock || \"\"}\r\n              className={`form-control ${errors.stock && \"border-danger\"}`}\r\n            />\r\n            {errors.stock && (\r\n              <div className=\"text-danger small\">{errors.stock}</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group my-4\">\r\n          <label>Ürün Bilgileri</label>\r\n          <textarea\r\n            value={values.productDescription || \"\"}\r\n            onChange={handleChange}\r\n            name=\"productDescription\"\r\n            rows=\"5\"\r\n            placeholder=\"Ürün Bilgileri\"\r\n            className={`form-control ${\r\n              errors.productDescription && \"border-danger\"\r\n            }`}\r\n          ></textarea>\r\n          {errors.productDescription && (\r\n            <div className=\"text-danger small\">{errors.productDescription}</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"my-4\">\r\n          <label>Kategori</label>\r\n          <CategorySelectBox\r\n            handleChange={handleChange}\r\n            categoryId={values.categoryId}\r\n          />\r\n          {errors.categoryId && (\r\n            <div className=\"text-danger small\">{errors.categoryId}</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-group my-4\">\r\n          <label>Ürün Resimleri</label>\r\n          <input\r\n            name=\"productImages\"\r\n            type=\"file\"\r\n            multiple\r\n            onChange={handleUpload}\r\n            className=\"border\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group my-4\">\r\n          <label>Donanım</label>\r\n          <button\r\n            className=\"btn btn-primary btn-sm ml-3 mb-1\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setSpecRowCount((prev) => (prev += 1));\r\n            }}\r\n          >\r\n            Satır Ekle\r\n          </button>\r\n          <div className=\"form-row mt-2\">{displaySpecRow.map((i) => i)}</div>\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary w-100\">Kaydet</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = (state) => ({\r\n  products: state.productReducer.products,\r\n  validationErrors: state.productReducer.errors,\r\n});\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n  getProduct: bindActionCreators(getProduct, dispatch),\r\n  updateProduct: bindActionCreators(updateProduct, dispatch),\r\n  removeSpecification: bindActionCreators(removeSpecification, dispatch),\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(UpdateProduct);\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getProducts, deleteProduct } from \"../../Redux/Actions/productActions\";\r\n\r\nconst Products = ({ products, getProducts, deleteProduct }) => {\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  function deletePr(e, id) {\r\n    e.preventDefault();\r\n    deleteProduct(id);\r\n  }\r\n\r\n  return (\r\n    <div id=\"admin-product-list\">\r\n      <h1>Ürünler</h1>\r\n      <section className=\"table-actions mb-2\">\r\n        <Link to=\"/admin/products/add\" className=\"btn btn-primary\">\r\n          Yeni Ürün Ekle\r\n        </Link>\r\n      </section>\r\n      <table className=\"table table-striped table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Resim</th>\r\n            <th>Ürün İsmi</th>\r\n            <th>Fiyat</th>\r\n            <th>Stok</th>\r\n            <th>Kategori</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products && products.length !== 0 ? (\r\n            products.map((i) => (\r\n              <tr key={i.id}>\r\n                <td>{i.id}</td>\r\n                <td>\r\n                  {/* <img src={i.productImages[0].imageUrl} alt=\"\" /> */}\r\n                </td>\r\n                <td>\r\n                  {i.productName.length > 20\r\n                    ? i.productName.slice(0, 20) + \"...\"\r\n                    : i.productName}\r\n                </td>\r\n                <td>\r\n                  {i.newPrice} <FontAwesomeIcon icon=\"lira-sign\" />\r\n                </td>\r\n                <td>{i.stock}</td>\r\n                <td>{i.categoryName}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-danger btn-sm w-100 mb-1\"\r\n                    onClick={(e) => deletePr(e, i.id)}\r\n                  >\r\n                    Sil\r\n                  </button>\r\n                  <Link\r\n                    to={`/admin/products/${i.id}`}\r\n                    className=\"btn btn-warning btn-sm w-100\"\r\n                  >\r\n                    Güncelle\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"7\">Henüz hiç ürün eklenmemiş.</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.productReducer.products,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getProducts: bindActionCreators(getProducts, dispatch),\r\n  deleteProduct: bindActionCreators(deleteProduct, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\r\n","import React, { useEffect } from \"react\";\r\n//Router\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getOrders } from \"../../Redux/Actions/orderActions\";\r\nimport displayOrderStatus from \"../Tools/displayOrderStatus\";\r\n\r\nconst Orders = ({ orders, getOrders }) => {\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"admin-order-list\">\r\n      <h1>Siparişler</h1>\r\n      <h4 className=\"my-4\">Aktif Siparişler</h4>\r\n      <table className=\"table table-striped table-bordered mb-4\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Kullanıcı Adı</th>\r\n            <th>Tutar</th>\r\n            <th>Tarih</th>\r\n            <th>Durum</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders &&\r\n            orders\r\n              .filter((i) => i.status !== 0)\r\n              .map((i) => (\r\n                <tr>\r\n                  <td>{i.id}</td>\r\n                  <td>{i.fullName}</td>\r\n                  <td>\r\n                    {i.totalPrice} <FontAwesomeIcon icon=\"lira-sign\" />\r\n                  </td>\r\n                  <td>{i.shortDate}</td>\r\n                  <td>{displayOrderStatus(i.status)}</td>\r\n                  <td>\r\n                    <button className=\"btn btn-danger btn-sm w-100 mb-1\">\r\n                      Sil\r\n                    </button>\r\n                    <Link\r\n                      to={`/admin/orders/${i.id}`}\r\n                      className=\"btn btn-warning btn-sm w-100\"\r\n                    >\r\n                      Detaylar\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h4 className=\"mb-4\">Tamamlanan Siparişler</h4>\r\n      <table className=\"table table-striped table-bordered mb-4\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Kullanıcı Adı</th>\r\n            <th>Tutar</th>\r\n            <th>Tarih</th>\r\n            <th>Durum</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders &&\r\n            orders\r\n              .filter((i) => i.status === 0)\r\n              .map((i) => (\r\n                <tr>\r\n                  <td>{i.id}</td>\r\n                  <td>{i.fullName}</td>\r\n                  <td>\r\n                    {i.totalPrice} <FontAwesomeIcon icon=\"lira-sign\" />\r\n                  </td>\r\n                  <td>{i.shortDate}</td>\r\n                  <td>{displayOrderStatus(i.status)}</td>\r\n                  <td>\r\n                    <button className=\"btn btn-danger btn-sm w-100 mb-1\">\r\n                      Sil\r\n                    </button>\r\n                    <Link\r\n                      to={`/admin/orders/${i.id}`}\r\n                      className=\"btn btn-warning btn-sm w-100\"\r\n                    >\r\n                      Detaylar\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  orders: state.orderReducer.orders,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getOrders: bindActionCreators(getOrders, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport numberFormat from \"../Tools/numberFormat\";\r\nimport { getOrderById, confirmOrder } from \"../../Redux/Actions/orderActions\";\r\nimport displayOrderStatus from \"../Tools/displayOrderStatus\";\r\n\r\nconst OrderDetails = ({ getOrder, orders, confirmOrder }) => {\r\n  const [order, setOrder] = useState(undefined);\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (!orders.find((i) => i.id === Number(id))) {\r\n      getOrder(id);\r\n    } else {\r\n      setOrder(orders.find((i) => i.id === Number(id)));\r\n    }\r\n  }, [orders]);\r\n\r\n  const handleClick = () => {\r\n    confirmOrder(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {order && (\r\n        <div id=\"admin-order-details\">\r\n          <h2 className=\"mb-5\">Sipariş Detayları</h2>\r\n          <dl className=\"row\">\r\n            <dt className=\"col-3\">Sipariş Tarihi</dt>\r\n            <dd className=\"col-9 border rounded\">{order.shortDate}</dd>\r\n\r\n            <dt className=\"col-3\">Sipariş Durumu</dt>\r\n            <dd className=\"col-9 border rounded\">\r\n              {displayOrderStatus(order.status)}\r\n            </dd>\r\n\r\n            <dt className=\"col-3\">Sipariş Veren</dt>\r\n            <dd className=\"col-9 border rounded\">{order.fullName}</dd>\r\n\r\n            <dt className=\"col-3\">Sipariş Adresi</dt>\r\n            <dd className=\"col-9 border rounded\">{order.addressDescription}</dd>\r\n\r\n            <dt className=\"col-3\">Sipariş Tutarı</dt>\r\n            <dd className=\"col-9 border rounded\">\r\n              {order.totalPrice} <FontAwesomeIcon icon=\"lira-sign\" />\r\n            </dd>\r\n\r\n            <dt className=\"col-3\">Satın Alınan Ürünler</dt>\r\n            <dd className=\"col-9 border rounded\">\r\n              {order.orderItems.map((i) => (\r\n                <dl className=\"row\">\r\n                  <dt className=\"col-3\">Ürün Adı</dt>\r\n                  <dd className=\"col-9 border rounded\">{i.productName}</dd>\r\n\r\n                  <dt className=\"col-3\">Ürün Adedi</dt>\r\n                  <dd className=\"col-9 border rounded\">{i.productQuantity}</dd>\r\n\r\n                  <dt className=\"col-3\">Toplam Tutar</dt>\r\n                  <dd className=\"col-9 border rounded\">\r\n                    {numberFormat(i.productQuantity * i.productPrice)}{\" \"}\r\n                    <FontAwesomeIcon icon=\"lira-sign\" />\r\n                  </dd>\r\n                </dl>\r\n              ))}\r\n            </dd>\r\n          </dl>\r\n          <button className=\"btn btn-primary w-100\" onClick={handleClick}>\r\n            Siparişi Onayla\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  orders: state.orderReducer.orders,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getOrder: bindActionCreators(getOrderById, dispatch),\r\n  confirmOrder: bindActionCreators(confirmOrder, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetails);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getEmails } from \"../../Redux/Actions/adminActions\";\r\n\r\nconst EmailList = ({ emails, getEmails }) => {\r\n  useEffect(() => {\r\n    if (emails && emails.length === 0) getEmails();\r\n  }, []);\r\n\r\n  return (\r\n    <section id=\"email-list\">\r\n      <h1 className=\"mb-5\">Email Listesi</h1>\r\n      <div className=\"row\">\r\n        {emails &&\r\n          emails.map((i, j) => (\r\n            <div\r\n              className={`col-5 mx-auto text-center alert alert-${\r\n                j % 2 === 0 ? \"success\" : \"warning\"\r\n              }`}\r\n            >\r\n              {i.email}\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  emails: state.adminReducer.emails,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getEmails: bindActionCreators(getEmails, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailList);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getFeedbacks } from \"../../Redux/Actions/adminActions\";\r\n\r\nconst Feedbacks = ({ feedbacks, getFeedbacks }) => {\r\n  useEffect(() => {\r\n    if (feedbacks && feedbacks.length === 0) getFeedbacks();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"feedbacks\">\r\n      <h1 className=\"mb-5\">Müşteri Mesajları</h1>\r\n      <div className=\"row\">\r\n        {feedbacks &&\r\n          feedbacks.map((i, j) => (\r\n            <dl\r\n              key={i.id}\r\n              className={`col-10 mx-auto p-3 alert alert-${\r\n                j % 2 === 0 ? \"success\" : \"warning\"\r\n              }`}\r\n            >\r\n              <dt>Müşteri Adı :</dt>\r\n              <dd>{i.name}</dd>\r\n              <dt>Müşteri Emaili :</dt>\r\n              <dd>{i.email}</dd>\r\n              <dt>Mesajı :</dt>\r\n              <dd>{i.feedbackText}</dd>\r\n            </dl>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  feedbacks: state.adminReducer.feedbacks,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getFeedbacks: bindActionCreators(getFeedbacks, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedbacks);\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, Switch, Route, useHistory } from \"react-router-dom\";\r\nimport AddProduct from \"../Components/Admin/AddProduct\";\r\nimport UpdateProduct from \"../Components/Admin/UpdateProduct\";\r\nimport Products from \"../Components/Admin/Products\";\r\nimport Orders from \"../Components/Admin/Orders\";\r\nimport OrderDetails from \"../Components/Admin/OrderDetails\";\r\nimport EmailList from \"../Components/Admin/EmailList\";\r\nimport Feedbacks from \"../Components/Admin/Feedbacks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Admin = ({ role }) => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!role.includes(\"admin\")) history.push(\"/404\");\r\n  }, []);\r\n\r\n  return (\r\n    <main id=\"admin\" className=\"bootstrapiso\">\r\n      <nav>\r\n        <h3>Yönetim Paneli</h3>\r\n        <hr />\r\n        <ul className=\"nav-links\">\r\n          <li className=\"nav-link\">\r\n            <Link to=\"/\">Anasayfa</Link>\r\n          </li>\r\n          <li className=\"nav-link\">\r\n            <Link to=\"/admin/products\">Ürünler</Link>\r\n          </li>\r\n          <li className=\"nav-link\">\r\n            <Link to=\"/admin/orders\">Siparişler</Link>\r\n          </li>\r\n          <li className=\"nav-link\">\r\n            <Link to=\"/admin/emaillist\">Email Listesi</Link>\r\n          </li>\r\n          <li className=\"nav-link\">\r\n            <Link to=\"/admin/feedbacks\">Müşteri Mesajları</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <Switch>\r\n        <Route exact path=\"/admin/products\" component={Products} />\r\n        <Route exact path=\"/admin/products/add\" component={AddProduct} />\r\n        <Route exact path=\"/admin/products/:id\" component={UpdateProduct} />\r\n        <Route exact path=\"/admin/orders\" component={Orders} />\r\n        <Route exact path=\"/admin/orders/:id\" component={OrderDetails} />\r\n        <Route exact path=\"/admin/emaillist\" component={EmailList} />\r\n        <Route exact path=\"/admin/feedbacks\" component={Feedbacks} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  role: state.userReducer.userCredentials.role,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Admin);\r\n"],"sourceRoot":""}